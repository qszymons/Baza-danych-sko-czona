#lab 4
CREATE TABLE postac (
    id_postaci SERIAL PRIMARY KEY,
    nazwa VARCHAR(40),
    rodzaj ENUM ('wiking', 'ptak', 'kobieta'),
    data_ur DATE,
    wiek INT UNSIGNED
);
INSERT INTO postac (nazwa, rodzaj, data_ur, wiek) VALUES 
('Bjorn', 'wiking', '2000-01-01', 25),
('Drozd', 'ptak', '2010-05-15', 12),
('Tesciowa', 'kobieta', '1936-08-22', 70);
INSERT INTO postac (nazwa, rodzaj, data_ur, wiek) VALUES 
('Bjorn', 'wiking', '2000-01-01', 25),
('Drozd', 'ptak', '2010-05-15', 12),
('Tesciowa', 'kobieta', '1936-08-22', 70);

CREATE TABLE walizka (
    id_walizki SERIAL PRIMARY KEY,
    pojemnosc INT UNSIGNED,
    kolor ENUM ('różowy', 'czerwony', 'tęczowy', 'żółty') DEFAULT 'różowy',
    id_wlasciciela INT,
    FOREIGN KEY (id_wlasciciela) REFERENCES postac (id_postaci) ON DELETE CASCADE
);
ALTER TABLE walizka ALTER COLUMN kolor SET DEFAULT 'różowy';

INSERT INTO walizka (pojemnosc, id_wlasciciela) VALUES (30, (SELECT id_postaci FROM postac WHERE nazwa = 'Bjorn'));


INSERT INTO walizka (pojemnosc, id_wlasciciela) VALUES (25, (SELECT id_postaci FROM postac WHERE nazwa = 'Tesciowa'));


CREATE TABLE izba (
    adres_budynku VARCHAR(255),
    nazwa_izby VARCHAR(255),
    metraz INT UNSIGNED,
    wlasciciel INT,
    PRIMARY KEY (adres_budynku, nazwa_izby),
    FOREIGN KEY (wlasciciel) REFERENCES postac (id_postaci) ON DELETE SET NULL
);
ALTER TABLE izba ADD COLUMN kolor VARCHAR(20) DEFAULT 'czarny' AFTER metraz;


INSERT INTO izba (adres_budynku, nazwa_izby, metraz, wlasciciel, kolor) 
VALUES ('ul. Przykładowa 123', 'spiżarnia', 10, NULL, 'biały');

CREATE TABLE przetwory (
    id_przetworu SERIAL PRIMARY KEY,
    rok_produkcji YEAR DEFAULT 1654,
    id_wykonawcy INT,
    zawartosc VARCHAR(255),
    dodatek VARCHAR(255) DEFAULT 'papryczka chilli',
    id_konsumenta INT,
    FOREIGN KEY (id_wykonawcy) REFERENCES postac (id_postaci),
    FOREIGN KEY (id_konsumenta) REFERENCES postac (id_postaci)
);
INSERT INTO przetwory (rok_produkcji, id_wykonawcy, zawartosc, dodatek, id_konsumenta) 
VALUES (2023, (SELECT id_postaci FROM postac WHERE nazwa = 'Wykonawca'), 'bigos', 'papryczka chilli', (SELECT id_postaci FROM postac WHERE nazwa = 'Konsument'));

INSERT INTO postac (nazwa, rodzaj, data_ur, wiek) VALUES 
('Wiking1', 'wiking', '1980-01-01', 40),
('Wiking2', 'wiking', '1985-05-15', 35),
('Wiking3', 'wiking', '1990-07-20', 30),
('Wiking4', 'wiking', '1995-10-10', 25),
('Wiking5', 'wiking', '2000-12-25', 20);

CREATE TABLE statek (
    nazwa_statku VARCHAR(255) PRIMARY KEY,
    rodzaj_statku ENUM ('żaglowiec', 'łódź podwodna', 'statek wojenny', 'inne'),
    data_wodowania DATE,
    max_ladownosc INT UNSIGNED
);

INSERT INTO statek (nazwa_statku, rodzaj_statku, data_wodowania, max_ladownosc) VALUES
('Statek1', 'żaglowiec', '2010-05-01', 100),
('Statek2', 'łódź podwodna', '2015-08-10', 50);

ALTER TABLE postac ADD COLUMN funkcja VARCHAR(255);
UPDATE postac SET funkcja = 'kapitan' WHERE nazwa = 'Bjorn';
ALTER TABLE postac ADD COLUMN id_statku VARCHAR(255), ADD FOREIGN KEY (id_statku) REFERENCES statek (nazwa_statku) ON DELETE SET NULL;

UPDATE postac SET id_statku = 'Statek1' WHERE nazwa IN ('Wiking1', 'Wiking2', 'Wiking3');
UPDATE postac SET id_statku = 'Statek2' WHERE nazwa IN ('Wiking4', 'Wiking5', 'Drozd');

DELETE FROM izba WHERE nazwa_izby = 'spiżarnia';
DROP TABLE izba;





#lab 5

DELETE FROM postac WHERE rodzaj = 'wiking' ORDER BY wiek DESC LIMIT 2;

ALTER TABLE postac DROP CONSTRAINT postac_pkey;

ALTER TABLE postac DROP COLUMN id_postaci;

ALTER TABLE postac ADD COLUMN pesel VARCHAR(11) PRIMARY KEY;

ALTER TABLE postac ALTER COLUMN rodzaj TYPE ENUM ('wiking', 'ptak', 'kobieta', 'syrena') USING rodzaj::text::ENUM ('wiking', 'ptak', 'kobieta', 'syrena');

INSERT INTO postac (nazwa, rodzaj, data_ur, wiek) VALUES ('Gertruda Nieszczera', 'syrena', '1990-01-01', 32);

UPDATE postac SET id_statku = (SELECT id_statku FROM postac WHERE nazwa = 'Bjorn') WHERE nazwa LIKE '%a%';

UPDATE statek SET max_ladownosc = max_ladownosc * 0.7 WHERE EXTRACT(YEAR FROM data_wodowania) BETWEEN 1900 AND 1999;

SELECT * FROM postac WHERE wiek <= 1000;

INSERT INTO postac (nazwa, rodzaj, data_ur, wiek) VALUES ('Loko', 'wąż', '1980-01-01', 200);

CREATE TABLE marynarz AS SELECT * FROM postac WHERE id_statku IS NOT NULL;

UPDATE postac SET id_statku = NULL;

DELETE FROM postac WHERE rodzaj = 'wiking' LIMIT 1;

DELETE FROM statek;

DROP TABLE statek;

CREATE TABLE zwierz (
    id SERIAL PRIMARY KEY,
    nazwa VARCHAR(255),
    wiek INT
);
INSERT INTO zwierz (nazwa, wiek) SELECT nazwa, wiek FROM postac WHERE rodzaj != 'wiking' AND rodzaj != 'ptak';



#lab 6
CREATE TABLE twoja_baza.kreatura AS SELECT * FROM wikingowie.kreatura;
CREATE TABLE twoja_baza.zasob AS SELECT * FROM wikingowie.zasob;
CREATE TABLE twoja_baza.ekwipunek AS SELECT * FROM wikingowie.ekwipunek;

SELECT * FROM twoja_baza.zasob;

SELECT * FROM twoja_baza.zasob WHERE typ = 'jedzenie';

SELECT idZasobu, ilosc FROM twoja_baza.ekwipunek WHERE idKreatury IN (1, 3, 5);

SELECT * FROM twoja_baza.kreatura WHERE typ != 'wiedźma' AND nośność >= 50;

SELECT * FROM twoja_baza.zasob WHERE waga BETWEEN 2 AND 5;

SELECT * FROM twoja_baza.kreatura WHERE nazwa LIKE '%or%' AND nośność BETWEEN 30 AND 70;

SELECT * FROM twoja_baza.zasob WHERE EXTRACT(MONTH FROM data_pozyskania) IN (7, 8);

SELECT * FROM twoja_baza.zasob ORDER BY rodzaj ASC;

SELECT * FROM twoja_baza.kreatura ORDER BY data_urodzenia ASC LIMIT 5;

SELECT DISTINCT rodzaj FROM twoja_baza.zasob;

SELECT CONCAT(nazwa, ' ', rodzaj) AS nazwa_i_rodzaj FROM twoja_baza.kreatura WHERE rodzaj LIKE 'wi%';

SELECT idZasobu, ilosc, waga, ilosc * waga AS całkowita_waga FROM twoja_baza.ekwipunek
JOIN twoja_baza.zasob USING (idZasobu)
WHERE EXTRACT(YEAR FROM data_pozyskania) BETWEEN 2000 AND 2007;

SELECT nazwa, waga * 0.7 AS masa_właściwego_jedzenia, waga * 0.3 AS masa_odpadków FROM twoja_baza.zasob WHERE typ = 'jedzenie';

SELECT * FROM twoja_baza.zasob WHERE rodzaj IS NULL;

SELECT DISTINCT rodzaj FROM twoja_baza.zasob WHERE nazwa LIKE 'Ba%' OR nazwa LIKE '%os%' ORDER BY rodzaj ASC;












#lab 7

SELECT AVG(waga) FROM kreatura WHERE rodzaj = 'wiking';

SELECT rodzaj, AVG(waga) AS srednia_waga, COUNT(*) AS liczba_kreatur
FROM kreatura
GROUP BY rodzaj;

SELECT rodzaj, AVG(EXTRACT(YEAR FROM AGE(data_urodzenia))) AS sredni_wiek
FROM kreatura
GROUP BY rodzaj;

SELECT rodzaj, AVG(EXTRACT(YEAR FROM AGE(data_urodzenia))) AS sredni_wiek
FROM kreatura
GROUP BY rodzaj;

SELECT rodzaj, SUM(waga) AS suma_wag
FROM zasob
GROUP BY rodzaj;

SELECT nazwa, AVG(waga) AS srednia_waga
FROM zasob
GROUP BY nazwa
HAVING COUNT(*) >= 4 AND SUM(waga) > 10;

SELECT rodzaj, COUNT(DISTINCT nazwa) AS liczba_roznych_nazw
FROM zasob
GROUP BY rodzaj
HAVING COUNT(*) > 1;

SELECT k.nazwa, COUNT(e.idZasobu) AS ilosc_zasobow
FROM kreatura k
LEFT JOIN ekwipunek e ON k.idKreatury = e.idKreatury
GROUP BY k.nazwa;

SELECT k.nazwa, z.nazwa AS nazwa_zasobu
FROM kreatura k
LEFT JOIN ekwipunek e ON k.idKreatury = e.idKreatury
LEFT JOIN zasob z ON e.idZasobu = z.idZasobu;

SELECT k.nazwa
FROM kreatura k
LEFT JOIN ekwipunek e ON k.idKreatury = e.idKreatury
WHERE e.idKreatury IS NULL;

SELECT k.nazwa AS nazwa_wikinga, z.nazwa AS nazwa_zasobu
FROM kreatura k
NATURAL JOIN ekwipunek e
JOIN zasob z ON e.idZasobu = z.idZasobu
WHERE EXTRACT(YEAR FROM k.data_urodzenia) BETWEEN 1670 AND 1679 AND k.rodzaj = 'wiking';


SELECT k.nazwa
FROM kreatura k
NATURAL JOIN ekwipunek e
JOIN zasob z ON e.idZasobu = z.idZasobu
WHERE z.typ = 'jedzenie'
ORDER BY k.data_urodzenia DESC
LIMIT 5;

SELECT k1.nazwa AS nazwa_kreatury_1, k2.nazwa AS nazwa_kreatury_2
FROM kreatura k1
JOIN kreatura k2 ON k1.idKreatury = k2.idKreatury - 5;

SELECT k.rodzaj, AVG(z.waga) AS srednia_waga_zasobow
FROM kreatura k
JOIN ekwipunek e ON k.idKreatury = e.idKreatury
JOIN zasob z ON e.idZasobu = z.idZasobu
WHERE k.rodzaj NOT IN ('małpa', 'wąż') AND COUNT(e.idEkwipunku) < 30
GROUP BY k.







#lab 8




